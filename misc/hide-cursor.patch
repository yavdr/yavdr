diff -urNad vdr-plugin-xineliboutput-1.0.6+cvs20100823.1330~/xine_sxfe_frontend.c vdr-plugin-xineliboutput-1.0.6+cvs20100823.1330/xine_sxfe_frontend.c
--- vdr-plugin-xineliboutput-1.0.6+cvs20100823.1330~/xine_sxfe_frontend.c	2010-08-19 21:37:12.000000000 +0200
+++ vdr-plugin-xineliboutput-1.0.6+cvs20100823.1330/xine_sxfe_frontend.c	2010-09-03 10:04:11.343075961 +0200
@@ -16,6 +16,8 @@
 #include <sys/shm.h>
 #include <math.h>
 #include <float.h>  /* DBL_MIN */
+#include <signal.h>
+#include <unistd.h>
 
 /* X11 */
 #include <X11/Xlib.h>
@@ -460,6 +462,51 @@
   }
 }
 
+void handle(sigval_t sig)
+{
+  sxfe_t *this = sig.sival_ptr;
+
+  // make mouse cursor invisible
+  set_cursor(this->display, this->window[this->fullscreen ? 1 : 0], 0);
+}
+
+int set_cursor_hide_delay(sxfe_t *this, unsigned int seconds)
+{
+  if (seconds > 0)
+  {
+    // make mouse cursor visible
+    set_cursor(this->display, this->window[this->fullscreen ? 1 : 0], 1);
+
+    static timer_t tid = 0;
+    struct sigevent se;
+    struct itimerspec ts, ots;
+
+    if (tid == 0)
+    {
+      memset(&se, 0, sizeof (se));
+      se.sigev_notify = SIGEV_THREAD;
+      se.sigev_notify_function = handle;
+      se.sigev_value.sival_ptr = this;
+
+      if (timer_create(CLOCK_REALTIME, &se, &tid) < 0)
+      {
+          LOGERR("timer_creat");
+          return -1;
+      }
+    }
+    ts.it_value.tv_sec = seconds;
+    ts.it_value.tv_nsec = 0;
+    ts.it_interval.tv_sec = 0;
+    ts.it_interval.tv_nsec = 0;
+    if (timer_settime(tid, 0, &ts, &ots) < 0)
+    {
+        LOGERR("timer_settime");
+        return -1;
+    }
+  }
+  return 0;
+}
+
 static void update_xinerama_info(sxfe_t *this)
 {
 #ifdef HAVE_XINERAMA
@@ -1346,13 +1393,14 @@
                 ExposureMask |
                 KeyPressMask |
                 ButtonPressMask | ButtonReleaseMask | ButtonMotionMask |
-                FocusChangeMask);
+                FocusChangeMask | PointerMotionMask);
   XSelectInput (this->display, this->window[1],
                 StructureNotifyMask |
                 ExposureMask |
                 KeyPressMask |
                 ButtonPressMask |
-                FocusChangeMask);
+                FocusChangeMask |
+		PointerMotionMask);
 
   /* Map current window */
   XMapRaised (this->display, this->window[this->fullscreen ? 1 : 0]);
@@ -1365,8 +1413,10 @@
   XSetWMProtocols(this->display, this->window[this->fullscreen ? 1 : 0], &(this->xa_WM_DELETE_WINDOW), 1);
 
   /* Hide cursor */
-  if(this->window_id <= 0)
-    set_cursor(this->display, this->window[1], 0);
+  if(this->window_id <= 0) {
+  //  set_cursor(this->display, this->window[1], 0);
+    set_cursor(this->display, this->window[this->fullscreen ? 1 : 0], 0);
+  }
 
   /* No screen saver */
   /* #warning TODO: suspend --> activate blank screen saver / DPMS display off ? */
@@ -1774,6 +1824,7 @@
         break;
 
       case MotionNotify:
+        set_cursor_hide_delay(this, 2);
         XMotionEvent_handler(this, (XMotionEvent *) &event);
         break;
