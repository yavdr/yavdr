description     "Reload driver on vdr exist status 1"
author          "Steffen Barszus <steffenbpunkt@gmail.com"

start on stopped vdr RESULT=failed EXIT_STATUS=1

env EXEC

task

script
# assumption: we only have 3 levels of dependency (?!)
# assumption: all dvb devices have this uevent - only detach what we load
for DEV in $(find /dev/dvb/*/frontend?) ; do
    ADAPTER=$(basename $(dirname $DEV))
    ADAPTER_NO=${ADAPTER//adapter}
    FRONTEND=$(basename $DEV)
    if [ -e "/sys/class/dvb/dvb${ADAPTER_NO}.${FRONTEND}/device/uevent" ]; then
        svdrpsend plug dynamite DETD $DEV
    fi
done

if [ "$EXEC" = "" ]||[ "$EXEC" = "unload" ]; then 

# getting the first and second level
MODULES0="`lsmod | grep -oe "^dvb_[[:alpha:]]*"`" || /bin/true
MODULES1="`lsmod | grep "^dvb" | awk '// {  print $4}' | grep -v "^$" | sed -e 's/,/ /g' `" || /bin/true

if [ -z "$MODULES1" -a -z "$MODULES0" ]; then
   exit 0
else

# get third level (modules which depend on second level) - and stuff everything into one list
for MODULE in $MODULES1 $MODULES0; do
    RESULT=`lsmod | grep "^$MODULE" | awk '// {  print $4}' | grep -v "^$" | sed -e 's/,/ /g' `
    MODULES="$MODULES $MODULE `lsmod | grep "^$MODULE" | awk '{  print $4}' | grep -v "^$" | sed -e 's/,/ /g'`"
done

MODULES="`echo $MODULES | sort | uniq`"

# remember modules if we suspend
echo $MODULES /tmp/modules-list.txt

# in any case unload
while [ "`lsmod | grep "^dvb" | awk '// {  print $4}' | grep -v "^$" | sed -e 's/,/ /g' `" != "" ]; do
    for MODULE in $MODULES ; do
        rmmod "$MODULE" >/dev/null 2>&1 || /bin/true
    done
done

# should be dvb_core or dvb_usb left
for MODULE in $MODULES0 ; do
    rmmod "$MODULE" >/dev/null 2>&1 || /bin/true
done

wait $(pidof rmmod) || /bin/true

fi 

# normal execution or just load the remembered modules
if [ "$EXEC" = "" ]||[ "$EXEC" = "load" ]; then

if [ -z "$MODULES" ]; then 
   if [ -e /tmp/modules-list.txt ]; then 
      MODULES=$(cat /tmp/modules-list.txt) 
      rmmod /tmp/modules-list.txt
   fi 
fi 


# load the modules in one shot
modprobe -a $MODULES >/dev/null 2>&1 || /bin/true
udevadm settle

fi # load/unload
fi # we actually have modules or not
end script
