<%pre>
#include <stdlib.h>
#include <string>
#include <iostream>
#include <fstream>
#include <ctype.h>
extern "C" {
#include <ClearSilver.h>
};

#include "common.h"

using namespace std;
</%pre><& authenticate ><%args>
  receiver_path;
  remotetype;
</%args><%cpp>
  string success = "false";
  string msg = "Unspecified error.";
  
  if (remotetype == "inputlirc")
  {
    NEOERR *err;
    HDF *hdf = NULL;
    if (((err = hdf_init(&hdf)) != STATUS_OK) || ((err = hdf_read_file(hdf, YAVDRDB)) != STATUS_OK))
    {
      msg = "Failed to reset LIRC settings.";
    }
    else
    {
      if (receiver_path == "") {
        err = hdf_set_valuef(hdf, "system.remoted=");
        err = hdf_set_valuef(hdf, "system.inputlirc.path=");
      }
      else
      {
        err = hdf_set_valuef(hdf, "system.inputlirc.path=%s", receiver_path.c_str());
        if (err != STATUS_OK) {
          msg = "Error on hdf_set_value system.inputlirc.path";
        }
        else
        {
          err = hdf_set_valuef(hdf, "system.remoted=inputlirc");
          if (err != STATUS_OK) {
            msg = "Error on hdf_set_value system.remoted";
          }
        }
      }
      if ((err != STATUS_OK) || (err = hdf_write_file(hdf, YAVDRDB)) != STATUS_OK) {
        nerr_log_error(err);
        msg = "Error on hdf_write_file";
      }
      hdf_destroy(&hdf);
      if (err == STATUS_OK) {
        int ret = system("/usr/bin/signal-event change-remoted");
        success = "true";
        msg = "OK. signal-event lirchw-changed";
      }
    }
  }
  else
  {
     msg = "Illegal request parameters";
  }
</%cpp>{
    success: <$success$>
/*    errors: {
        receiver_id: "<$msg$>"
    }
*/
}
