<%pre>
#include <string>
#include <ctype.h>
#include <ClearSilver.h>
#include "../common.h"

extern "C" {
#include <X11/Xlib.h>

#include "NVCtrl.h"
#include "NVCtrlLib.h"
}

using namespace std;
</%pre><& authenticate ><%args>
command;
</%args><%cpp>
  reply.setHeader ("Cache-Control", "no-cache", false);
  reply.setHeader ("Content-Type", "application/json", false);
  HDF *hdf = NULL;
  NEOERR *err;
  
  string dualhead_enabled = "";
  string graphtft_enabled = "";
  
  //get current lirc settings from database
  if (((err = hdf_init(&hdf)) != STATUS_OK) || ((err = hdf_read_file(hdf, YAVDRDB)) != STATUS_OK))
  {
    nerr_log_error(err);
  }
  else
  {
    dualhead_enabled = hdf_get_value(hdf, "system.x11.dualhead.enabled", "0");
    if (dualhead_enabled == "") {
        dualhead_enabled = "0";
    }
    graphtft_enabled = hdf_get_value(hdf, "vdr.plugin.graphtft.enabled", "0");
    if (graphtft_enabled == "") {
        graphtft_enabled = "0";
    }
    
    Display *dpy;
    Bool ret;
    int screen, display_devices, mask, major, minor, len, j;
    char *str, *start, *str0, *str1;
    char *displayDeviceNames[8];
    int nDisplayDevice;
    
    
    /*
     * Open a display connection, and make sure the NV-CONTROL X
     * extension is present on the screen we want to use.
     */
   /* 
    dpy = XOpenDisplay(NULL);
    if (dpy) {
        screen = DefaultScreen(dpy);

        if (XNVCTRLIsNvScreen(dpy, screen)) {
        } else {
            fprintf(stderr, "The NV-CONTROL X extension is not available on screen "
                "%d of '%s'.\n\n", screen, XDisplayName(NULL));
            return 1;
        }

    
    } else {
        fprintf(stderr, "Cannot open display '%s'.\n\n", XDisplayName(NULL));
    }
    */
  }
  

  reply.out() << "{\n"
              << "  \"system\" : {\n"
              << "    \"x11\" : {\n"
              << "      \"dualhead\" : {\n"
              << "         \"enabled\" : " + dualhead_enabled + "\n"
              << "        }\n"
              << "      }\n"
              << "    },\n"
              << "  \"vdr\" : {\n"
              << "    \"plugin\" : {\n"
              << "      \"graphtft\" : {\n"
              << "         \"enabled\" : " + graphtft_enabled + "\n"
              << "        }\n"
              << "      }\n"
              << "    }\n"
              << "}\n";

</%cpp>

