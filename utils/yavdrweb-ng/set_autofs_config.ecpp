<%pre>
#include <string>
#include <iostream>
#include <fstream>
#include <ctype.h>
#include <ClearSilver.h>
#include "../common.h"

using namespace std;
</%pre><%args>
cmd;
string mounts[];
</%args>
<& authenticate >
<%cpp>
reply.setHeader ("Cache-Control", "no-cache", false);

string success = "false";

if( cmd == "mounts" )
  {
    HDF *hdf = NULL;
    NEOERR *err;

    if( ( STATUS_OK != ( err = hdf_init( &hdf ) ) )
	||( STATUS_OK != ( err = hdf_read_file( hdf, YAVDRDB ) ) ) )
      {
	nerr_log_error( err );
      }
    else
      {
	const char *apx[] = { "00", "01", "02", "03", "04",
			      "05", "06", "07", "08", "09" };
	string base = "system.net.media.video.";
	int idx = 0;

	for( mounts_type::const_iterator it = mounts.begin();
	     ( ( it != mounts.end() )
	       &&( idx < ( sizeof( apx ) / sizeof( apx[0] ) ) ) );
	       ++it, ++idx )
	  {
	    log_info( *it );
	    err = hdf_set_valuef( hdf,
				  "system.net.media.video.%s=%s",
				  apx[idx],
				  it->c_str());
	    if( STATUS_OK != err ) { break; }
	  }

        err = hdf_write_file(hdf, YAVDRDB);
        if( STATUS_OK != err )
	  {
	    nerr_log_error(err);
	  }
        hdf_destroy(&hdf);

	if( STATUS_OK == err )
	  {
	    int ret = system( "/usr/bin/signal-event change-auto-net-yavdr" );

	    if( 0 == ret )  success = "true";
	  }
      }
  }
</%cpp>
{
    success: <$success$>
}
