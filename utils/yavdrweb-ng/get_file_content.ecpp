<%pre>
#include <stdio.h>
#include <string>

using namespace std;
</%pre><& authenticate ><%args>
file;
</%args><%cpp>

const char *files[] = {
    "/var/log/messages", 
    "/var/log/user.log", 
    "/var/log/syslog", 
    "/var/log/tntnet/tntnet.log", 
    
    "/var/lib/yavdrdb.hdf",
    "/etc/X11/xorg.conf",
    "/etc/lirc/hardware.conf",
    "/etc/lirc/lircd.conf",
    "/etc/vdr/setup.conf",
    "/etc/vdr/remote.conf"
};

int findex = 0;

if (file == "filelist")
{
    for (findex = 0; (findex < (sizeof(files) / sizeof(files[0]))); findex++)
    {
        if (file == files[findex])
            reply.out() << files[findex] << "\n";
    }
}
else{
    
    bool validFileName = false;
    for (findex = 0; (findex < (sizeof(files) / sizeof(files[0]))) && !validFileName; findex++)
    {
        if (file == files[findex])
            validFileName = true;
    }
    
    if (validFileName)
    {
        string mode;
        if (file.substr(0,9) == "/var/log/")
            mode = "tail -n 100";
        else
            mode = "cat";
        
        string cmd = mode + " " + file;
        reply.out() << "Command: " << cmd << "<br\>";
        if (FILE *stream = popen(cmd.c_str(), "r"))
        {
            char buffer[1024];
            int counter = 0;
            while (!feof(stream))
            {
              if (fgets(buffer, sizeof(buffer), stream) != NULL)
              {
                 reply.sout() << string(buffer).substr(0, strlen(buffer) - 1 );  //we must escape special chars via sout (xss) and cut off LF
                 reply.out() << "<br/>";
              }
            }
            pclose(stream); 
          }
    }
    else
        reply.out() << "Illegal command.";
}
</%cpp>

