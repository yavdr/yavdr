Window.SetBackgroundTopColor(0, 0, 0);
Window.SetBackgroundBottomColor(0, 0, 0);

logo.sprite = Sprite();

glow.sprite = Sprite();
glow.opacity_angle = 0;

fun refresh_callback ()
  {
    if (status == "normal")
      {
	# --- glow part
	if (Plymouth.GetMode () == "boot")
	   {
	      glow.image = Image("logo_glow_green.png");
	      glow.sprite = Sprite(glow.image);
	   }
	if (Plymouth.GetMode () == "resume")
	   {
	      glow.image = Image("logo_glow_green.png");
	      glow.sprite = Sprite(glow.image);
	   }
	if (Plymouth.GetMode () == "reboot")
	   {
	      glow.image = Image("logo_glow_red.png");
	      glow.sprite = Sprite(glow.image);
	   }
	if (Plymouth.GetMode () == "suspend")
	   {
	      glow.image = Image("logo_glow_red.png");
	      glow.sprite = Sprite(glow.image);
	   }
	if (Plymouth.GetMode () == "shutdown")
	   {
	      glow.image = Image("logo_glow_red.png");
	      glow.sprite = Sprite(glow.image);
	   }
        glow.opacity_angle += ((2 * 3.14) / 50) * 1;  # 1 HZ
        glow_min_opacity = 0.3;
        glow_opacity = (Math.Cos(glow.opacity_angle) + 1) / 2;
        glow_opacity *= 1 - glow_min_opacity;
        glow_opacity += glow_min_opacity;
        glow.sprite.SetX (Window.GetX() + Window.GetWidth()  / 2 - glow.image.GetWidth()  / 2);
        glow.sprite.SetY (Window.GetY() + Window.GetHeight() / 2 - glow.image.GetHeight() / 2);
	glow.sprite.SetZ (-10);
        glow.sprite.SetOpacity (glow_opacity);
	# --- logo part
	logo.image = Image("logo_transparent_switch.png");
	logo.sprite = Sprite(logo.image);
        logo_min_opacity = 0.4;
	logo.sprite.SetX (Window.GetX() + Window.GetWidth()  / 2 - logo.image.GetWidth()  / 2);
	logo.sprite.SetY (Window.GetY() + Window.GetHeight() / 2 - logo.image.GetHeight() / 2);
	logo.sprite.SetZ (10);
        logo.sprite.SetOpacity (logo_min_opacity);
      }
  }
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

#----------------------------------------- Progress Bar --------------------------------

#fun progress_callback (progress, time)

#{
# logo.opacity = ((progress * 70) / 100) + logo_min_opacity;
# logo.sprite.SetOpacity (logo_opacity);
#}

##if (global.progress_time == NULL) {
##    global.progress_time = progress;  #time;
##    switch_off_bullets ();
##}

##if ((progress - global.progress_time) >= 1.0)
##{
##    global.progress_time = progress;
##    logo.opacity = ((progress * 70) / 100) + logo_min_opacity;
##    logo.sprite.SetOpacity (logo_opacity);
##}

#Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
  glow.sprite.SetOpacity (1);
  logo.sprite.SetOpacity (1);
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
